{"version":3,"sources":["components/Filter/Filter.styled.jsx","redux/contacts/contacts-actions.js","components/Filter/Filter.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.jsx","services/contacts-api.js","redux/contacts/contacts-operation.js","components/Spiner/Spiner.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","App.js","redux/contacts/contacts-reduser.js","redux/store.js","index.js"],"names":["FilterInput","styled","label","filterAct","createAction","Filter","filter","useSelector","state","contacts","dispatch","useDispatch","type","name","value","onChange","e","target","pattern","title","ButtonStyled","button","Contact","id","phone","deleteContact","onClick","ListStyled","ul","fetchContacts","a","axios","get","resp","data","addContacts","contact","post","deleteContacts","delete","defaults","baseURL","createAsyncThunk","contactsAPI","addContact","removeContact","Spiner","color","margin","height","width","ContactList","loading","toast","success","length","toLowerCase","includes","map","FormStyled","form","ContactForm","useState","setName","number","setNumber","handleChange","addNewContact","newContact","some","error","onSubmit","preventDefault","required","App","useEffect","contactsOperation","createReducer","fulfilled","_","payload","contactsAction","pending","rejected","combineReducers","store","configureStore","reducer","contactsReduser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5be14e88.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const FilterInput = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 250px;\r\n`;\r\n","import { createAction} from '@reduxjs/toolkit';\r\n\r\nexport const filterAct = createAction('contacts/filter');\r\n\r\n","import { FilterInput } from './Filter.styled';\r\nimport {  useDispatch, useSelector } from 'react-redux'\r\nimport {filterAct} from '../../redux/contacts/contacts-actions.js'\r\n\r\nexport default function Filter() {\r\n  const {filter} = useSelector(state=>state.contacts)\r\n  const dispatch=useDispatch();\r\n  \r\n  const handleChangeFilter = e => {\r\n    const value = e.target.value;\r\n    dispatch(filterAct(value));\r\n  };\r\n  return (\r\n    <>\r\n      <FilterInput>\r\n        Find contacts by name\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          onChange={handleChangeFilter}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        />\r\n      </FilterInput>\r\n    </>\r\n  );\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ButtonStyled = styled.button`\r\n  margin-left: 25px;\r\n  :hover,\r\n  :focus {\r\n    background-color: blue;\r\n    color: white;\r\n  }\r\n`;\r\n","import { ButtonStyled } from './Contact.styled';\r\n\r\nexport default function Contact({ id, name, phone, deleteContact }) {\r\n  return (\r\n    <>\r\n      <span>\r\n        {name} : {phone}\r\n      </span>\r\n      <ButtonStyled type=\"button\" onClick={() => deleteContact(id)}>\r\n        Delete\r\n      </ButtonStyled>\r\n    </>\r\n  );\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ListStyled = styled.ul`\r\n  & li {\r\n    margin-top: 7px;\r\n  }\r\n`;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL =\r\n  'https://62056a28161670001741bb7d.mockapi.io';\r\n\r\nexport async function fetchContacts() {\r\n  const resp = await axios.get('/contacts');\r\n  return resp.data;\r\n}\r\n\r\nexport async function addContacts(contact) {\r\n  const resp = await axios.post('/contacts', contact);\r\n  return resp.data;\r\n}\r\n\r\nexport async function deleteContacts(id) {\r\n  const resp = await axios.delete(`/contacts/${id}`);\r\n  return resp.data;\r\n}\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport * as contactsAPI from 'services/contacts-api';\r\n\r\nexport const fetchContacts = createAsyncThunk('contacts/fetchContacts', async () => {\r\n  const contacts = await contactsAPI.fetchContacts();\r\n  return contacts\r\n})\r\n\r\nexport const addContact = createAsyncThunk('contacts/addContacts', async (contact) => {\r\n  const contacts = await contactsAPI.addContacts(contact);\r\n  return contacts\r\n})\r\n\r\nexport const removeContact = createAsyncThunk('contacts/deleteContacts', async (id) => {\r\n  const contacts = await contactsAPI.deleteContacts(id);\r\n  return contacts\r\n})","import { TailSpin } from 'react-loader-spinner';\r\n\r\nfunction Spiner() {\r\n  return (\r\n    <div>\r\n      <TailSpin color=\"#00BFFF\" margin=\"0 auto\" height={50} width={50} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spiner;","import Contact from 'components/Contact/Contact';\r\nimport { ListStyled } from './ContactList.styled';\r\nimport {  useDispatch, useSelector } from 'react-redux'\r\nimport {removeContact} from 'redux/contacts/contacts-operation'\r\nimport toast from 'react-hot-toast';\r\nimport Spiner from \"components/Spiner/Spiner\"\r\n\r\nexport default function ContactList() {\r\n  const {contacts, filter, loading} = useSelector(state=>state.contacts)\r\n  const dispatch = useDispatch();\r\n  \r\n  const deleteContact =(id)=>{\r\n    dispatch(removeContact(id))\r\n    toast.success('delete is complete');\r\n  }\r\n  return (\r\n    <>\r\n      <section>\r\n        {loading ? <Spiner /> : <ListStyled>\r\n          {contacts.length > 0 && contacts\r\n            .filter(contact =>\r\n              contact.name.toLowerCase().includes(filter.toLowerCase())\r\n            )\r\n            .map(({ id, name, phone }) => (\r\n              <li key={id}>\r\n                <Contact\r\n                  id={id}\r\n                  name={name}\r\n                  phone={phone}\r\n                  deleteContact={deleteContact}\r\n                />\r\n              </li>\r\n            ))}\r\n        </ListStyled>}\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const FormStyled = styled.form`\r\n  /* display: flex;\r\n  flex-direction: column; */\r\n  padding: 20px;\r\n  width: 300px;\r\n  border: 1px solid black;\r\n\r\n  & label {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: 20px;\r\n  }\r\n  & button {\r\n    margin-top: 20px;\r\n    :hover,\r\n    :focus {\r\n      background-color: blue;\r\n      color: white;\r\n    }\r\n  }\r\n`;\r\n","import { useState } from 'react';\r\nimport { FormStyled } from './ContactForm.styled';\r\nimport toast from 'react-hot-toast';\r\nimport {  useDispatch, useSelector } from 'react-redux'\r\nimport {addContact} from 'redux/contacts/contacts-operation'\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(state=>state.contacts.contacts)\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const submitForm = e => {\r\n    e.preventDefault();\r\n    const newContact = {      \r\n      name,\r\n      phone: number,\r\n    };\r\n    addNewContact(newContact);\r\n    setNumber('');\r\n    setName('');\r\n  };\r\n\r\n  const addNewContact = newContact => {\r\n    if (\r\n      contacts.some(\r\n        contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\r\n      )\r\n    ) {\r\n      toast.error('contact with such name already exists');\r\n      return;\r\n    }\r\n    dispatch(addContact(newContact));\r\n    toast.success('contact added');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormStyled onSubmit={submitForm}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={handleChange}\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            onChange={handleChange}\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </FormStyled>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\nimport { Toaster } from 'react-hot-toast';\r\nimport Filter from './components/Filter/Filter';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as contactsOperation from './redux/contacts/contacts-operation';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperation.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <Toaster />\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {\r\n  createReducer,\r\n  combineReducers,\r\n} from '@reduxjs/toolkit';\r\nimport * as contactsAction from './contacts-actions';\r\nimport {fetchContacts, addContact, removeContact} from './contacts-operation'\r\n\r\nconst contacts = createReducer([], {\r\n  [fetchContacts.fulfilled]: (_, { payload }) =>\r\n    payload,\r\n  [addContact.fulfilled]: (state, { payload }) => [payload, ...state],\r\n  [removeContact.fulfilled]:(state, { payload })=>state.filter(({id})=>id!==payload.id)\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [contactsAction.filterAct]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n  [addContact.pending]:()=>true,\r\n  [addContact.fulfilled]: () => false,\r\n  [addContact.rejected]: () => false,\r\n  [removeContact.pending]:()=>true,\r\n  [removeContact.fulfilled]: () => false,\r\n  [removeContact.rejected]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContacts.rejected]: (_, { payload }) =>\r\n    payload,\r\n  [fetchContacts.pending]: () => null,\r\n[addContact.rejected]: (_, { payload }) =>\r\n    payload,\r\n  [addContact.pending]: () => null,\r\n    [removeContact.rejected]: (_, { payload }) =>\r\n    payload,\r\n    [removeContact.pending]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport contactsReduser from './contacts/contacts-reduser'\r\n\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReduser,\r\n},\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './redux/store'\r\nimport { Provider } from 'react-redux'\r\n\r\nReactDOM.render(  \r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}