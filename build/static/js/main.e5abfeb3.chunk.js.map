{"version":3,"sources":["components/Filter/Filter.styled.jsx","redux/contacts/contacts-actions.js","components/Filter/Filter.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.jsx","components/Spiner/Spiner.jsx","services/contactsApi.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","App.js","redux/contacts/contacts-reduser.js","redux/store.js","index.js"],"names":["FilterInput","styled","label","filterAct","createAction","Filter","filter","useSelector","state","contacts","dispatch","useDispatch","type","name","value","onChange","e","target","pattern","title","ButtonStyled","button","Contact","id","phone","removeContact","onClick","ListStyled","ul","ErrorMasage","p","Spiner","size","style","width","height","color","margin","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getContact","query","providesTags","addContact","mutation","newContact","url","method","body","invalidatesTags","deleteContact","useGetContactQuery","useAddContactMutation","useDeleteContactMutation","ContactList","data","error","isError","isFetching","toast","success","length","contact","toLowerCase","includes","map","FormStyled","form","ContactForm","useState","setName","number","setNumber","isLoading","handleChange","addNewContact","some","onSubmit","preventDefault","required","disabled","App","createReducer","contactsAction","_","payload","store","configureStore","reducer","middleware","getDefaultMiddleware","setupListeners","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5abfeb3.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const FilterInput = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 250px;\r\n`;\r\n","import { createAction} from '@reduxjs/toolkit';\r\n\r\nexport const filterAct = createAction('contacts/filter');\r\n\r\n","import { FilterInput } from './Filter.styled';\r\nimport {  useDispatch, useSelector } from 'react-redux'\r\nimport {filterAct} from 'redux/contacts/contacts-actions.js'\r\n\r\nexport default function Filter() {\r\n  const {filter} = useSelector(state=>state.contacts)\r\n  const dispatch=useDispatch();\r\n  \r\n  const handleChangeFilter = e => {\r\n    const value = e.target.value;\r\n    dispatch(filterAct(value));\r\n  };\r\n  return (\r\n    <>\r\n      <FilterInput>\r\n        Find contacts by name\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          onChange={handleChangeFilter}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        />\r\n      </FilterInput>\r\n    </>\r\n  );\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ButtonStyled = styled.button`\r\n  margin-left: 25px;\r\n  :hover,\r\n  :focus {\r\n    background-color: blue;\r\n    color: white;\r\n  }\r\n`;\r\n\r\n\r\n","import { ButtonStyled } from './Contact.styled';\r\n\r\nexport default function Contact({ id, name, phone, removeContact }) {\r\n  return (\r\n    <>\r\n      <span>\r\n        {name} : {phone}\r\n      </span>\r\n      <ButtonStyled type=\"button\" onClick={() => removeContact(id)}>\r\n        Delete\r\n      </ButtonStyled>\r\n    </>\r\n  );\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ListStyled = styled.ul`\r\n  & li {\r\n    margin-top: 7px;\r\n  }\r\n`;\r\nexport const ErrorMasage = styled.p`\r\ncolor: red;\r\n`","import { TailSpin } from 'react-loader-spinner';\r\n\r\nfunction Spiner({size}) {\r\n  return (\r\n    <div style={{width: size, height: size}}>\r\n      <TailSpin color=\"#00BFFF\" margin=\"0 auto\" height={\"inherit\"} width={ \"inherit\"}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spiner;","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nexport const contactsApi = createApi({\r\n  reducerPath: 'contacts',\r\n  baseQuery: fetchBaseQuery({ baseUrl: 'https://62056a28161670001741bb7d.mockapi.io' }),\r\n    tagTypes: ['Contact'],\r\n    endpoints: (builder) => ({\r\n    getContact: builder.query({\r\n        query: () => `/contacts`,\r\n        providesTags:['Contact']\r\n    }),\r\n    addContact: builder.mutation({\r\n        query: (newContact) => ({\r\n            url: `/contacts`,\r\n            method: \"POST\",\r\n            body: newContact,\r\n        }),\r\n        invalidatesTags: ['Contact'],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n        query: (id) => ({\r\n            url: `/contacts/${id}`,\r\n            method: \"DELETE\",            \r\n        }),\r\n        invalidatesTags:['Contact']\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const { useGetContactQuery, useAddContactMutation, useDeleteContactMutation } = contactsApi","import Contact from 'components/Contact/Contact';\r\nimport { ListStyled, ErrorMasage } from './ContactList.styled';\r\nimport {   useSelector } from 'react-redux'\r\nimport toast from 'react-hot-toast';\r\nimport Spiner from \"components/Spiner/Spiner\"\r\nimport {useGetContactQuery, useDeleteContactMutation} from 'services/contactsApi'\r\n\r\nexport default function ContactList() {\r\n  const { filter} = useSelector(state=>state)\r\n  const [deleteContact]=useDeleteContactMutation();\r\n  const { data, error, isError, isFetching } = useGetContactQuery();\r\n  \r\n  const removeContact = (id) => {\r\n    deleteContact(id)\r\n    toast.success('delete is complete');\r\n  }\r\n  return (\r\n    <>\r\n      <section>\r\n        {isFetching && <Spiner size={50}/>}\r\n        {isError && <ErrorMasage>{error.error}</ErrorMasage>}\r\n        {data && !isError && <ListStyled>\r\n          {data.length > 0 && data\r\n            .filter(contact =>\r\n              contact.name.toLowerCase().includes(filter.toLowerCase())\r\n            )\r\n            .map(({ id, name, phone }) => (\r\n              <li key={id}>\r\n                <Contact\r\n                  id={id}\r\n                  name={name}\r\n                  phone={phone}\r\n                  removeContact={removeContact}\r\n                />\r\n              </li>\r\n            ))}\r\n        </ListStyled>}\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const FormStyled = styled.form`\r\n  /* display: flex;\r\n  flex-direction: column; */\r\n  padding: 20px;\r\n  width: 300px;\r\n  border: 1px solid black;\r\n\r\n  & label {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: 20px;\r\n  }\r\n  & button {\r\n    display: flex;\r\n    margin-top: 20px;\r\n    :hover,\r\n    :focus {\r\n      background-color: blue;\r\n      color: white;\r\n    }\r\n  }\r\n`;\r\n","import { useState } from 'react';\r\nimport { FormStyled } from './ContactForm.styled';\r\nimport toast from 'react-hot-toast';\r\nimport {useGetContactQuery, useAddContactMutation } from 'services/contactsApi';\r\nimport Spiner from 'components/Spiner/Spiner';\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [addContact, {isLoading}] = useAddContactMutation();\r\n  const { data } = useGetContactQuery();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const submitForm = e => {\r\n    e.preventDefault();\r\n    const newContact = {      \r\n      name,\r\n      phone: number,\r\n    };\r\n    addNewContact(newContact);\r\n    setNumber('');\r\n    setName('');\r\n  };\r\n\r\n  const addNewContact = newContact => {\r\n    if (\r\n      data.some(\r\n        contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\r\n      )\r\n    ) {\r\n      toast.error('contact with such name already exists');\r\n      return;\r\n    }\r\n    addContact(newContact);\r\n    toast.success('contact added');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormStyled onSubmit={submitForm}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={handleChange}\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            onChange={handleChange}\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\" disabled={isLoading} >\r\n          {isLoading && <Spiner size={12}/>}\r\n          Add contact</button>\r\n      </FormStyled>\r\n    </>\r\n  );\r\n}\r\n","import { Toaster } from 'react-hot-toast';\r\nimport Filter from './components/Filter/Filter';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\n\r\nfunction App() {\r\n  \r\n  return (\r\n    <>\r\n      <Toaster />\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {\r\n  createReducer,  \r\n} from '@reduxjs/toolkit';\r\nimport * as contactsAction from './contacts-actions';\r\n\r\n export const filter = createReducer('', {\r\n  [contactsAction.filterAct]: (_, { payload }) => payload,\r\n});\r\n\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport {filter} from './contacts/contacts-reduser'\r\nimport { setupListeners } from '@reduxjs/toolkit/query'\r\n\r\nimport { contactsApi } from 'services/contactsApi'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    [contactsApi.reducerPath]: contactsApi.reducer,\r\n    filter,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    [...getDefaultMiddleware(), contactsApi.middleware]\r\n  })\r\n\r\n\r\n  setupListeners(store.dispatch)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './redux/store'\r\nimport { Provider } from 'react-redux'\r\n\r\nReactDOM.render(  \r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}